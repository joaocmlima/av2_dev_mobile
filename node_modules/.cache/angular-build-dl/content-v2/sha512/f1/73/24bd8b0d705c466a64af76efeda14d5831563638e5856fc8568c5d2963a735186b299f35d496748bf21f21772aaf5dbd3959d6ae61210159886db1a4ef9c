{"version":3,"sources":["./node_modules/@ionic-native/geolocation/__ivy_ngcc__/ngx/index.js","./src/app/pages/mapa/mapa.page.html","./src/app/pages/mapa/mapa-routing.module.ts","./src/app/pages/mapa/mapa.module.ts","./src/app/pages/mapa/mapa.page.scss","./src/app/pages/mapa/mapa.page.ts"],"names":[],"mappings":"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","file":"pages-mapa-mapa-module-es2015.js","sourcesContent":["import { __decorate, __extends } from \"tslib\";\r\nimport { Injectable } from '@angular/core';\r\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\r\nimport { Observable } from 'rxjs';\r\nimport * as ɵngcc0 from '@angular/core';\r\nvar Geolocation = /** @class */ (function (_super) {\r\n    __extends(Geolocation, _super);\r\n    function Geolocation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Geolocation.prototype.getCurrentPosition = function (options) { return cordova(this, \"getCurrentPosition\", { \"callbackOrder\": \"reverse\" }, arguments); };\r\n    /**\r\n     * Watch the current device's position.  Clear the watch by unsubscribing from\r\n     * Observable changes.\r\n     *\r\n     * ```typescript\r\n     * const subscription = this.geolocation.watchPosition()\r\n     *                               .filter((p) => p.coords !== undefined) //Filter Out Errors\r\n     *                               .subscribe(position => {\r\n     *   console.log(position.coords.longitude + ' ' + position.coords.latitude);\r\n     * });\r\n     *\r\n     * // To stop notifications\r\n     * subscription.unsubscribe();\r\n     * ```\r\n     *\r\n     * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\r\n     * @returns {Observable<Geoposition | PositionError>} Returns an Observable that notifies with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or errors.\r\n     */\r\n    Geolocation.prototype.watchPosition = function (options) {\r\n        return new Observable(function (observer) {\r\n            var watchId = navigator.geolocation.watchPosition(observer.next.bind(observer), observer.next.bind(observer), options);\r\n            return function () { return navigator.geolocation.clearWatch(watchId); };\r\n        });\r\n    };\r\n    Geolocation.pluginName = \"Geolocation\";\r\n    Geolocation.plugin = \"cordova-plugin-geolocation\";\r\n    Geolocation.pluginRef = \"navigator.geolocation\";\r\n    Geolocation.repo = \"https://github.com/apache/cordova-plugin-geolocation\";\r\n    Geolocation.install = \"ionic cordova plugin add cordova-plugin-geolocation --variable GEOLOCATION_USAGE_DESCRIPTION=\\\"To locate you\\\"\";\r\n    Geolocation.installVariables = [\"GEOLOCATION_USAGE_DESCRIPTION\"];\r\n    Geolocation.platforms = [\"Amazon Fire OS\", \"Android\", \"Browser\", \"iOS\", \"Windows\"];\r\nGeolocation.ɵfac = function Geolocation_Factory(t) { return ɵGeolocation_BaseFactory(t || Geolocation); };\r\nGeolocation.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Geolocation, factory: function (t) { return Geolocation.ɵfac(t); } });\r\nvar ɵGeolocation_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(Geolocation);\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Geolocation, [{\r\n        type: Injectable\r\n    }], null, null); })();\r\n    return Geolocation;\r\n}(IonicNativePlugin));\r\nexport { Geolocation };\r\n\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Mapa</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding (click)=\\\"abc()\\\">\\r\\n  <div #map id=\\\"map\\\"></div>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MapaPage } from './mapa.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MapaPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MapaPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MapaPageRoutingModule } from './mapa-routing.module';\r\n\r\nimport { MapaPage } from './mapa.page';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MapaPageRoutingModule\r\n  ],\r\n  declarations: [MapaPage],\r\n\r\n})\r\nexport class MapaPageModule {}\r\n","export default \"#map {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbWFwYS9tYXBhLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21hcGEvbWFwYS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbWFwIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\ndeclare var google;\r\n\r\n@Component({\r\n  selector: 'app-mapa',\r\n  templateUrl: './mapa.page.html',\r\n  styleUrls: ['./mapa.page.scss'],\r\n  providers: [Geolocation]\r\n})\r\nexport class MapaPage implements OnInit {\r\n  map: any;\r\n\r\n  constructor(private geolocation: Geolocation) { }\r\n\r\n  ngOnInit(){\r\n  }\r\n\r\n  abc() {\r\n    const mari = google.maps;\r\n    console.log(mari);\r\n   /* this.geolocation.getCurrentPosition({\r\n      timeout:5000,\r\n      enableHighAccuracy:true,\r\n    }).then((resp) => {\r\n        const position = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\r\n\r\n        const mapOptions = {\r\n          zoom: 18,\r\n          center: {\r\n            lat: 13,\r\n            lng: 12\r\n          }\r\n        }\r\n\r\n        this.map = new google.maps.Map(document.getElementById('map'), mapOptions);*/\r\n\r\n        /*const marker = new google.maps.Marker({\r\n          position: position,\r\n          map: this.map\r\n        });\r\n\r\n      }).catch((error) => {\r\n        console.log('Erro ao recuperar sua posição', error);\r\n      });\r\n\r\n      var watch = this.geolocation.watchPosition();\r\n      watch.subscribe(\r\n        (data)=>{\r\n          this.loadMap(data);\r\n          console.log(data)\r\n        }\r\n      );*/\r\n\r\n  }\r\n\r\n  loadMap(pos:any){\r\n    const position = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);\r\n    const mapOptions = {\r\n      zoom: 18,\r\n      center: position\r\n    }\r\n    this.map = new google.maps.Map(document.getElementById('map'), mapOptions);\r\n    const marker = new google.maps.Marker({\r\n      position: position,\r\n      map: this.map\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}